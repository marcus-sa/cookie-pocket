/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import {
  I18n,
} from './components/cookie-pocket/i18n.interface';

declare global {

  namespace StencilComponents {
    interface CookiePocket {
      'force': boolean;
      'i18n': I18n;
      'key': string;
      'logo': string;
    }
  }

  interface HTMLCookiePocketElement extends StencilComponents.CookiePocket, HTMLStencilElement {}

  var HTMLCookiePocketElement: {
    prototype: HTMLCookiePocketElement;
    new (): HTMLCookiePocketElement;
  };
  interface HTMLElementTagNameMap {
    'cookie-pocket': HTMLCookiePocketElement;
  }
  interface ElementTagNameMap {
    'cookie-pocket': HTMLCookiePocketElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'cookie-pocket': JSXElements.CookiePocketAttributes;
    }
  }
  namespace JSXElements {
    export interface CookiePocketAttributes extends HTMLAttributes {
      'force'?: boolean;
      'i18n'?: I18n;
      'key'?: string;
      'logo'?: string;
      'onCompliance'?: (event: CustomEvent) => void;
      'onReady'?: (event: CustomEvent) => void;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;